<?xml version="1.0" encoding="UTF-8"?>
<flow-definition plugin="workflow-job@1234.v7f012345a_b_c">
  <actions/>
  <description>Dynamic Application Provisioning Pipeline</description>
  <keepDependencies>false</keepDependencies>
  <properties>
    <hudson.model.ParametersDefinitionProperty>
      <parameterDefinitions>
        <hudson.model.StringParameterDefinition>
          <name>APPLICATIONS</name>
          <description>Comma-separated list of applications to install (e.g. nginx,tomcat,mariadb,redis,grafana,prometheus)</description>
          <defaultValue></defaultValue>
          <trim>true</trim>
        </hudson.model.StringParameterDefinition>
      </parameterDefinitions>
    </hudson.model.ParametersDefinitionProperty>
  </properties>
  <definition class="org.jenkinsci.plugins.workflow.cps.CpsFlowDefinition" plugin="workflow-cps@2.93">
    <script>
pipeline {
    agent any
    
    stages {
        stage('Prepare Environment') {
            steps {
                sh 'sudo apt-get update'
            }
        }
        
        stage('Install Applications') {
            steps {
                script {
                    def apps = params.APPLICATIONS.split(',')
                    apps.each { app ->
                        app = app.trim().toLowerCase()
                        if (app) {
                            echo "Installing ${app}"
                            sh "sudo apt-get install -y ${app}"
                            sh "sudo systemctl start ${app}"
                            sh "sudo systemctl enable ${app}"
                        }
                    }
                }
            }
        }
        
        stage('Verify Installation') {
            steps {
                script {
                    def apps = params.APPLICATIONS.split(',')
                    apps.each { app ->
                        app = app.trim().toLowerCase()
                        if (app) {
                            sh "systemctl is-active --quiet ${app} || (echo '${app} is not running' && exit 1)"
                        }
                    }
                }
            }
        }
    }
    
    post {
        success {
            echo 'Installation completed successfully!'
        }
        failure {
            echo 'Installation failed. Please check the logs for details.'
        }
    }
}
    </script>
    <sandbox>true</sandbox>
  </definition>
  <triggers/>
  <disabled>false</disabled>
</flow-definition>